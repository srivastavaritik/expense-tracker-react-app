{"version":3,"sources":["components/UI/Card.js","components/ExpenseFilter/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesLists.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","yearSelected","onChange","event","onFilterChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesLists","expenseContent","fexp","length","map","expense","key","id","ChartBar","barFillHeight","maxValue","style","height","lable","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","Math","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","console","log","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","placeholder","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","startEditingHandler","changeEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","addedExpense","prevExpenses","getYear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec5eb09f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../CSS/Card.css\";\r\n\r\nconst Card = (props) => { \r\n  const classes = 'card '+ props.className;\r\n    return (\r\n    <div className={classes}>{props.children}</div>\r\n  );\r\n}\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropdownChangeHandler = event => {\r\n        props.onFilterChange(event.target.value)\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.yearSelected} onChange={dropdownChangeHandler}>\r\n        <option value='ALL'>ALL</option>\r\n        <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport '../CSS/ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className='expense-date'>\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport '../CSS/ExpenseItem.css'\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n            <ExpenseDate date = {props.date}/>\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>â‚¹{props.amount}</div>\r\n            </div>\r\n       </Card>\r\n        </li>\r\n    );\r\n}\r\nexport default ExpenseItem;","import React from \"react\";\r\nimport '../CSS/ExpensesLists.css'\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\n\r\nconst ExpensesLists = (props) => {\r\n    let expenseContent = <h1>No Expenses Found!</h1>;\r\n    if(props.fexp.length === 0){\r\n        return <h2 className='expenses-list__fallback'>{expenseContent}</h2>;\r\n    }\r\n    return (\r\n        <ul className='expenses-list'>\r\n            {props.fexp.map((expense) => (\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))}\r\n        </ul>\r\n    );\r\n}\r\nexport default ExpensesLists;","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\n const ChartBar =(props) =>{\r\n    \r\n    let barFillHeight ='0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = ((props.value)/(props.maxValue))*100 +'%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height : barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__lable\">{props.lable}</div>\r\n    </div>\r\n     )\r\n };\r\n\r\n export default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.lable}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          lable={dataPoint.lable}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { lable: 'Jan', value: 0 },\r\n    { lable: 'Feb', value: 0 },\r\n    { lable: 'Mar', value: 0 },\r\n    { lable: 'Apr', value: 0 },\r\n    { lable: 'May', value: 0 },\r\n    { lable: 'Jun', value: 0 },\r\n    { lable: 'Jul', value: 0 },\r\n    { lable: 'Aug', value: 0 },\r\n    { lable: 'Sep', value: 0 },\r\n    { lable: 'Oct', value: 0 },\r\n    { lable: 'Nov', value: 0 },\r\n    { lable: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport \"../CSS/Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"../ExpenseFilter/ExpenseFilter\";\r\nimport ExpensesLists from \"./ExpensesLists\";\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n \r\n  const filteredExpenses = props.items.filter(expense =>{ \r\n    \r\n    if (filteredYear==='ALL') return expense;     \r\n     \r\n    else return expense.date.getFullYear().toString()===filteredYear}\r\n    \r\n    );\r\n\r\n    \r\nconsole.log(filteredYear);\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        yearSelected={filteredYear}\r\n        onFilterChange={filterChangeHandler}\r\n      />\r\n\r\n      {/* {filteredExpenses.length === 0 ?  <h1>No Expense Found!</h1> : filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))} */}\r\n      <ExpensesChart  expenses = {filteredExpenses}/>\r\n      <ExpensesLists fexp={filteredExpenses}/>\r\n      \r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n            placeholder=\"Enter Title Here...\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            placeholder=\"Enter Amount Spent...\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            amount={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            min=\"2021-12-01\"\r\n            max=\"2023-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React,{useState} from \"react\";\r\nimport \"./css/NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {setIsEditing(true)};\r\n  const stopEditingHandler = () => {setIsEditing(false)};\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n      {isEditing && <ExpenseForm changeEditing={startEditingHandler} onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React,{useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const[expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = addedExpense => {\n    setExpenses(prevExpenses => {\n      return ([addedExpense, ...prevExpenses]);\n    });\n\n    console.log('In App.js');\n    console.log(addedExpense);\n    console.log(addedExpense.date.getYear()+1900);\n\n  }\n\n  \n  return (\n    \n    <div >\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      \n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}